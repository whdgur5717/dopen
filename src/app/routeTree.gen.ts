/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/_auth'
import { Route as IndexImport } from './routes/index'
import { Route as AuthUserIdImport } from './routes/_auth/$userId'
import { Route as AuthBoardIndexImport } from './routes/_auth/Board/index'
import { Route as AuthNotificationTestImport } from './routes/_auth/notification/test'
import { Route as AuthBoardBoardlayoutImport } from './routes/_auth/Board/_boardlayout'
import { Route as AuthBoardBoardlayoutBoardNameIndexImport } from './routes/_auth/Board/_boardlayout/$boardName/index'
import { Route as AuthBoardBoardlayoutReflectionWriteImport } from './routes/_auth/Board/_boardlayout/Reflection/write'
import { Route as AuthBoardBoardlayoutBoardNameWriteImport } from './routes/_auth/Board/_boardlayout/$boardName/write'
import { Route as AuthBoardBoardlayoutBoardNamePostIdImport } from './routes/_auth/Board/_boardlayout/$boardName/$postId'

// Create Virtual Routes

const MyBoardListLazyImport = createFileRoute('/MyBoardList')()
const AuthBoardImport = createFileRoute('/_auth/Board')()
const SignupIndexLazyImport = createFileRoute('/Signup/')()
const LoginIndexLazyImport = createFileRoute('/Login/')()
const AuthNotificationIndexLazyImport = createFileRoute(
  '/_auth/notification/',
)()
const AuthMypageIndexLazyImport = createFileRoute('/_auth/mypage/')()
const AuthMypageMycommentlistLazyImport = createFileRoute(
  '/_auth/mypage/mycommentlist',
)()
const AuthMypageMyboardlistLazyImport = createFileRoute(
  '/_auth/mypage/myboardlist',
)()
const AuthMypageAccountLazyImport = createFileRoute('/_auth/mypage/account')()
const AuthBoardBoardlayoutReflectionPostIdLazyImport = createFileRoute(
  '/_auth/Board/_boardlayout/Reflection/$postId',
)()

// Create/Update Routes

const MyBoardListLazyRoute = MyBoardListLazyImport.update({
  path: '/MyBoardList',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/MyBoardList.lazy').then((d) => d.Route))

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const AuthBoardRoute = AuthBoardImport.update({
  path: '/Board',
  getParentRoute: () => AuthRoute,
} as any)

const SignupIndexLazyRoute = SignupIndexLazyImport.update({
  path: '/Signup/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/Signup/index.lazy').then((d) => d.Route))

const LoginIndexLazyRoute = LoginIndexLazyImport.update({
  path: '/Login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/Login/index.lazy').then((d) => d.Route))

const AuthUserIdRoute = AuthUserIdImport.update({
  path: '/$userId',
  getParentRoute: () => AuthRoute,
} as any)

const AuthNotificationIndexLazyRoute = AuthNotificationIndexLazyImport.update({
  path: '/notification/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/notification/index.lazy').then((d) => d.Route),
)

const AuthMypageIndexLazyRoute = AuthMypageIndexLazyImport.update({
  path: '/mypage/',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/mypage/index.lazy').then((d) => d.Route),
)

const AuthBoardIndexRoute = AuthBoardIndexImport.update({
  path: '/',
  getParentRoute: () => AuthBoardRoute,
} as any).lazy(() =>
  import('./routes/_auth/Board/index.lazy').then((d) => d.Route),
)

const AuthMypageMycommentlistLazyRoute =
  AuthMypageMycommentlistLazyImport.update({
    path: '/mypage/mycommentlist',
    getParentRoute: () => AuthRoute,
  } as any).lazy(() =>
    import('./routes/_auth/mypage/mycommentlist.lazy').then((d) => d.Route),
  )

const AuthMypageMyboardlistLazyRoute = AuthMypageMyboardlistLazyImport.update({
  path: '/mypage/myboardlist',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/mypage/myboardlist.lazy').then((d) => d.Route),
)

const AuthMypageAccountLazyRoute = AuthMypageAccountLazyImport.update({
  path: '/mypage/account',
  getParentRoute: () => AuthRoute,
} as any).lazy(() =>
  import('./routes/_auth/mypage/account.lazy').then((d) => d.Route),
)

const AuthNotificationTestRoute = AuthNotificationTestImport.update({
  path: '/notification/test',
  getParentRoute: () => AuthRoute,
} as any)

const AuthBoardBoardlayoutRoute = AuthBoardBoardlayoutImport.update({
  id: '/_boardlayout',
  getParentRoute: () => AuthBoardRoute,
} as any)

const AuthBoardBoardlayoutBoardNameIndexRoute =
  AuthBoardBoardlayoutBoardNameIndexImport.update({
    path: '/$boardName/',
    getParentRoute: () => AuthBoardBoardlayoutRoute,
  } as any)

const AuthBoardBoardlayoutReflectionPostIdLazyRoute =
  AuthBoardBoardlayoutReflectionPostIdLazyImport.update({
    path: '/Reflection/$postId',
    getParentRoute: () => AuthBoardBoardlayoutRoute,
  } as any).lazy(() =>
    import('./routes/_auth/Board/_boardlayout/Reflection/$postId.lazy').then(
      (d) => d.Route,
    ),
  )

const AuthBoardBoardlayoutReflectionWriteRoute =
  AuthBoardBoardlayoutReflectionWriteImport.update({
    path: '/Reflection/write',
    getParentRoute: () => AuthBoardBoardlayoutRoute,
  } as any)

const AuthBoardBoardlayoutBoardNameWriteRoute =
  AuthBoardBoardlayoutBoardNameWriteImport.update({
    path: '/$boardName/write',
    getParentRoute: () => AuthBoardBoardlayoutRoute,
  } as any)

const AuthBoardBoardlayoutBoardNamePostIdRoute =
  AuthBoardBoardlayoutBoardNamePostIdImport.update({
    path: '/$boardName/$postId',
    getParentRoute: () => AuthBoardBoardlayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/MyBoardList': {
      id: '/MyBoardList'
      path: '/MyBoardList'
      fullPath: '/MyBoardList'
      preLoaderRoute: typeof MyBoardListLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/$userId': {
      id: '/_auth/$userId'
      path: '/$userId'
      fullPath: '/$userId'
      preLoaderRoute: typeof AuthUserIdImport
      parentRoute: typeof AuthImport
    }
    '/Login/': {
      id: '/Login/'
      path: '/Login'
      fullPath: '/Login'
      preLoaderRoute: typeof LoginIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/Signup/': {
      id: '/Signup/'
      path: '/Signup'
      fullPath: '/Signup'
      preLoaderRoute: typeof SignupIndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_auth/Board': {
      id: '/_auth/Board'
      path: '/Board'
      fullPath: '/Board'
      preLoaderRoute: typeof AuthBoardImport
      parentRoute: typeof AuthImport
    }
    '/_auth/Board/_boardlayout': {
      id: '/_auth/Board/_boardlayout'
      path: '/Board'
      fullPath: '/Board'
      preLoaderRoute: typeof AuthBoardBoardlayoutImport
      parentRoute: typeof AuthBoardRoute
    }
    '/_auth/notification/test': {
      id: '/_auth/notification/test'
      path: '/notification/test'
      fullPath: '/notification/test'
      preLoaderRoute: typeof AuthNotificationTestImport
      parentRoute: typeof AuthImport
    }
    '/_auth/mypage/account': {
      id: '/_auth/mypage/account'
      path: '/mypage/account'
      fullPath: '/mypage/account'
      preLoaderRoute: typeof AuthMypageAccountLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/mypage/myboardlist': {
      id: '/_auth/mypage/myboardlist'
      path: '/mypage/myboardlist'
      fullPath: '/mypage/myboardlist'
      preLoaderRoute: typeof AuthMypageMyboardlistLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/mypage/mycommentlist': {
      id: '/_auth/mypage/mycommentlist'
      path: '/mypage/mycommentlist'
      fullPath: '/mypage/mycommentlist'
      preLoaderRoute: typeof AuthMypageMycommentlistLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/Board/': {
      id: '/_auth/Board/'
      path: '/'
      fullPath: '/Board/'
      preLoaderRoute: typeof AuthBoardIndexImport
      parentRoute: typeof AuthBoardImport
    }
    '/_auth/mypage/': {
      id: '/_auth/mypage/'
      path: '/mypage'
      fullPath: '/mypage'
      preLoaderRoute: typeof AuthMypageIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/notification/': {
      id: '/_auth/notification/'
      path: '/notification'
      fullPath: '/notification'
      preLoaderRoute: typeof AuthNotificationIndexLazyImport
      parentRoute: typeof AuthImport
    }
    '/_auth/Board/_boardlayout/$boardName/$postId': {
      id: '/_auth/Board/_boardlayout/$boardName/$postId'
      path: '/$boardName/$postId'
      fullPath: '/Board/$boardName/$postId'
      preLoaderRoute: typeof AuthBoardBoardlayoutBoardNamePostIdImport
      parentRoute: typeof AuthBoardBoardlayoutImport
    }
    '/_auth/Board/_boardlayout/$boardName/write': {
      id: '/_auth/Board/_boardlayout/$boardName/write'
      path: '/$boardName/write'
      fullPath: '/Board/$boardName/write'
      preLoaderRoute: typeof AuthBoardBoardlayoutBoardNameWriteImport
      parentRoute: typeof AuthBoardBoardlayoutImport
    }
    '/_auth/Board/_boardlayout/Reflection/write': {
      id: '/_auth/Board/_boardlayout/Reflection/write'
      path: '/Reflection/write'
      fullPath: '/Board/Reflection/write'
      preLoaderRoute: typeof AuthBoardBoardlayoutReflectionWriteImport
      parentRoute: typeof AuthBoardBoardlayoutImport
    }
    '/_auth/Board/_boardlayout/Reflection/$postId': {
      id: '/_auth/Board/_boardlayout/Reflection/$postId'
      path: '/Reflection/$postId'
      fullPath: '/Board/Reflection/$postId'
      preLoaderRoute: typeof AuthBoardBoardlayoutReflectionPostIdLazyImport
      parentRoute: typeof AuthBoardBoardlayoutImport
    }
    '/_auth/Board/_boardlayout/$boardName/': {
      id: '/_auth/Board/_boardlayout/$boardName/'
      path: '/$boardName'
      fullPath: '/Board/$boardName'
      preLoaderRoute: typeof AuthBoardBoardlayoutBoardNameIndexImport
      parentRoute: typeof AuthBoardBoardlayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  AuthRoute: AuthRoute.addChildren({
    AuthUserIdRoute,
    AuthBoardRoute: AuthBoardRoute.addChildren({
      AuthBoardBoardlayoutRoute: AuthBoardBoardlayoutRoute.addChildren({
        AuthBoardBoardlayoutBoardNamePostIdRoute,
        AuthBoardBoardlayoutBoardNameWriteRoute,
        AuthBoardBoardlayoutReflectionWriteRoute,
        AuthBoardBoardlayoutReflectionPostIdLazyRoute,
        AuthBoardBoardlayoutBoardNameIndexRoute,
      }),
      AuthBoardIndexRoute,
    }),
    AuthNotificationTestRoute,
    AuthMypageAccountLazyRoute,
    AuthMypageMyboardlistLazyRoute,
    AuthMypageMycommentlistLazyRoute,
    AuthMypageIndexLazyRoute,
    AuthNotificationIndexLazyRoute,
  }),
  MyBoardListLazyRoute,
  LoginIndexLazyRoute,
  SignupIndexLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_auth",
        "/MyBoardList",
        "/Login/",
        "/Signup/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/$userId",
        "/_auth/Board",
        "/_auth/notification/test",
        "/_auth/mypage/account",
        "/_auth/mypage/myboardlist",
        "/_auth/mypage/mycommentlist",
        "/_auth/mypage/",
        "/_auth/notification/"
      ]
    },
    "/MyBoardList": {
      "filePath": "MyBoardList.lazy.tsx"
    },
    "/_auth/$userId": {
      "filePath": "_auth/$userId.tsx",
      "parent": "/_auth"
    },
    "/Login/": {
      "filePath": "Login/index.lazy.tsx"
    },
    "/Signup/": {
      "filePath": "Signup/index.lazy.tsx"
    },
    "/_auth/Board": {
      "filePath": "_auth/Board",
      "parent": "/_auth",
      "children": [
        "/_auth/Board/_boardlayout",
        "/_auth/Board/"
      ]
    },
    "/_auth/Board/_boardlayout": {
      "filePath": "_auth/Board/_boardlayout.tsx",
      "parent": "/_auth/Board",
      "children": [
        "/_auth/Board/_boardlayout/$boardName/$postId",
        "/_auth/Board/_boardlayout/$boardName/write",
        "/_auth/Board/_boardlayout/Reflection/write",
        "/_auth/Board/_boardlayout/Reflection/$postId",
        "/_auth/Board/_boardlayout/$boardName/"
      ]
    },
    "/_auth/notification/test": {
      "filePath": "_auth/notification/test.tsx",
      "parent": "/_auth"
    },
    "/_auth/mypage/account": {
      "filePath": "_auth/mypage/account.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/mypage/myboardlist": {
      "filePath": "_auth/mypage/myboardlist.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/mypage/mycommentlist": {
      "filePath": "_auth/mypage/mycommentlist.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/Board/": {
      "filePath": "_auth/Board/index.tsx",
      "parent": "/_auth/Board"
    },
    "/_auth/mypage/": {
      "filePath": "_auth/mypage/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/notification/": {
      "filePath": "_auth/notification/index.lazy.tsx",
      "parent": "/_auth"
    },
    "/_auth/Board/_boardlayout/$boardName/$postId": {
      "filePath": "_auth/Board/_boardlayout/$boardName/$postId.tsx",
      "parent": "/_auth/Board/_boardlayout"
    },
    "/_auth/Board/_boardlayout/$boardName/write": {
      "filePath": "_auth/Board/_boardlayout/$boardName/write.tsx",
      "parent": "/_auth/Board/_boardlayout"
    },
    "/_auth/Board/_boardlayout/Reflection/write": {
      "filePath": "_auth/Board/_boardlayout/Reflection/write.tsx",
      "parent": "/_auth/Board/_boardlayout"
    },
    "/_auth/Board/_boardlayout/Reflection/$postId": {
      "filePath": "_auth/Board/_boardlayout/Reflection/$postId.lazy.tsx",
      "parent": "/_auth/Board/_boardlayout"
    },
    "/_auth/Board/_boardlayout/$boardName/": {
      "filePath": "_auth/Board/_boardlayout/$boardName/index.tsx",
      "parent": "/_auth/Board/_boardlayout"
    }
  }
}
ROUTE_MANIFEST_END */
